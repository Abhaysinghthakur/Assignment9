{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/country/country.component.css","webpack:///./src/app/country/country.component.html","webpack:///./src/app/country/country.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/regions/regions.component.css","webpack:///./src/app/regions/regions.component.html","webpack:///./src/app/regions/regions.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/shared/shared.component.css","webpack:///./src/app/shared/shared/shared.component.html","webpack:///./src/app/shared/shared/shared.component.ts","webpack:///./src/app/single-country/single-country.component.css","webpack:///./src/app/single-country/single-country.component.html","webpack:///./src/app/single-country/single-country.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/regions']\\\">Regions</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                    aria-expanded=\\\"false\\\">\\n                    languages\\n                </a>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                    <div class=\\\"dropdown-item\\\">\\n                        <form class=\\\"form-inline my-2 my-lg-0\\\" #createBlogForm=\\\"ngForm\\\" (ngSubmit)=\\\"searchLang()\\\">\\n                            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search by Language code\\\" aria-label=\\\"Search\\\" name=\\\"language\\\" [(ngModel)]=\\\"lang\\\" #name=\\\"ngModel\\\" required> \\n                            <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\"[disabled]=\\\"!createBlogForm.form.valid\\\" type=\\\"submit\\\">Search</button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </li>\\n            <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n                    aria-expanded=\\\"false\\\">\\n                    Currencies\\n                </a>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                    <div class=\\\"dropdown-item\\\">\\n                        <form class=\\\"form-inline my-2 my-lg-0\\\"#createBlogForm2=\\\"ngForm\\\" (ngSubmit)=\\\"searchCurrency()\\\">\\n                            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search by Currency code\\\"name=\\\"Currency\\\" [(ngModel)]=\\\"currency\\\" #name=\\\"ngModel\\\" aria-label=\\\"Search\\\" required>\\n                            <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" [disabled]=\\\"!createBlogForm2.form.valid\\\" type=\\\"submit\\\">Search</button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Assignment9';\n  lang:string;\n  currency:string;\n  counter = 1;\n  constructor(private router:Router){}\n\n  searchLang(){\n      this.router.navigate(['/countries/lang',this.lang]);\n      window.location.reload();\n  }\n\n  searchCurrency(){\n      this.router.navigate(['/countries/currency',this.currency]);\n      window.location.reload();\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { RegionsComponent } from './regions/regions.component';\nimport { CountryComponent } from './country/country.component';\nimport { SingleCountryComponent } from './single-country/single-country.component';\nimport {HttpClientModule} from '@angular/common/http'\nimport {RouterModule} from '@angular/router'\nimport { HttpService } from './http.service';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { SharedModule } from './shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegionsComponent,\n    CountryComponent,\n    SingleCountryComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n\n\n    RouterModule.forRoot([\n      {path:'regions',component:RegionsComponent},\n      {path:'countries/:arg/:region',component:CountryComponent},\n      {path:'country/:countryName',component:SingleCountryComponent},\n      {path:'',component:RegionsComponent,pathMatch:'full'},\n      {path:'**',component:RegionsComponent}\n    ]),\n    SharedModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".cardContainer{\\n    margin: 10% 0 10% 0;\\n}\\n\\n.mainContainer{\\n    justify-content: center;\\n}\"","module.exports = \"<!-- <div class=\\\"container\\\">\\n  <div *ngIf=\\\"countriesData\\\">\\n    <div class=\\\"row mainContainer\\\">\\n      <div *ngFor=\\\"let country of countriesData\\\">\\n        <div class=\\\"col-6 col-md-4\\\">\\n          <div class=\\\"card cardContainer\\\" style=\\\"width: 18rem;\\\">\\n            <img class=\\\"card-img-top\\\" src={{country.flag}} alt=\\\"Card image cap\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n              <p class=\\\"card-text\\\">\\n                Capital:{{country.capital}}\\n                <br/> -->\\n                <!-- [routerLink]=\\\"['/countries/lang',country.languages[0].iso639_1]\\\" -->\\n                <!-- Language:\\n                <span *ngFor=\\\"let language of country.languages;let last=last\\\">\\n                  <span class=\\\"goTo\\\" (click)=\\\"goLanguage(language.iso639_1)\\\">\\n                    {{language.name}}{{last?'.':','}}\\n                  </span>\\n                </span>\\n                <br/> -->\\n                <!-- [routerLink]=\\\"['/countries/currency',country.currencies[0].code]\\\" -->\\n                <!-- Currency:\\n                <span *ngFor=\\\"let currency of country.currencies;let last=last\\\">\\n                  <span class=\\\"goTo\\\" (click)=\\\"goCurrency(country.currencies[0].code)\\\">\\n                    {{currency.name}}{{last?'.':','}}\\n                  </span>\\n                </span>\\n              </p>\\n              <a [routerLink]=\\\"['/country',country.name]\\\" class=\\\"btn btn-primary\\\">view More</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\" style=\\\"margin-bottom: 5%\\\">Go Back</button>\\n    <button type=\\\"button\\\" (click)=\\\"goRegion()\\\" class=\\\"btn btn-secondary\\\" style=\\\"margin: 0 0 5% 2%\\\">Goto Regions</button>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"container-fluid\\\" >\\n<app-shared [countriesData]=\\\"countriesData\\\" (notifyLang)=\\\"goLanguage($event)\\\" (notifyCurrency)=\\\"goCurrency($event)\\\"></app-shared>\\n<div class=\\\"container\\\">\\n    <button type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\" style=\\\"margin-bottom: 5%\\\">Go Back</button>\\n    <button type=\\\"button\\\" (click)=\\\"goRegion()\\\" class=\\\"btn btn-secondary\\\" style=\\\"margin: 0 0 5% 2%\\\">Goto Regions</button>\\n</div>\\n</div>\"","import { Component, OnInit, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\nimport { Location } from '@angular/common'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\nimport { ApiData } from '../Interface';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css']\n})\n\n//main countries class which will display the data of countries after being filtered or what ever.\nexport class CountryComponent implements OnInit,OnChanges {\n\n  public region;\n  public arg;\n  public someData;\n  public countriesData: any;\n  public responseData:ApiData;\n  constructor(private _route: ActivatedRoute, private http: HttpService, private location: Location, private router: Router,private toastr: ToastrService ) { }\n\n  ngOnInit() {\n    this.region = this._route.snapshot.paramMap.get('region');\n    this.arg = this._route.snapshot.paramMap.get('arg')\n    this.httpGetCountries(this.arg,this.region);\n  }\n\n  ngOnChanges(changes:SimpleChanges){\n    console.log(changes)\n  }\n\n  goBack(): any {\n    this.location.back();\n    this.region = this.getRoutes();\n    this.arg = this.getRoutesArg();\n    this.httpGetCountries(this.arg,this.region);\n  }\n\n  goLanguage(lang): any {\n    this.httpGetCountries('lang',lang);\n    this.router.navigate(['/countries/lang/' + lang]);\n  }\n\n  goCurrency(currency): any {\n    this.httpGetCountries('currency',currency);\n    this.router.navigate(['/countries/currency/' + currency]);\n  }\n\n  goRegion(): any {\n    this.router.navigate(['/regions']);\n  }\n\n  httpGetCountries(arg,region){\n    this.http.getCountries(arg,region).subscribe(\n      data => {\n        this.countriesData = data;\n        this.responseData = this.countriesData;\n      },\n      error => {\n        console.log(error.errorMessage);\n        this.toastr.error('No Data By This Name', 'Sorry!', {timeOut: 3000});\n      }\n    );\n  }\n\n  getRoutesArg(){\n    return this._route.snapshot.paramMap.get('arg');\n  }\n\n  getRoutes(){\n    return this._route.snapshot.paramMap.get('region');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private feildCountries = '?fields=name;capital;currencies;languages;flag';\n  private feildCountry ='?fields=name;capital;currencies;languages;flag;region;subregion;population'\n  public url = 'https://restcountries.eu/rest/v2/';\n\n  constructor(private http:HttpClient) { }\n\n  getCountries = (arg,region) =>{\n    return this.http.get(this.url+arg+'/'+region+this.feildCountries);\n  }\n\n\n\n  getcountry = (name) =>{\n    return this.http.get(this.url+'name/'+name+this.feildCountry)\n  }\n  \n  private handleError(err:HttpErrorResponse){\n    console.log(err.message);\n    return Observable.throw(err.message);\n  }\n\n}\n","module.exports = \".border{\\n    border: 5px solid;\\n    padding: 10px;\\n    box-shadow: 5px 10px 8px 10px #888888;\\n    margin : 3%;\\n    color: rgb(84, 85, 85);\\n}\\n\\n.regionName{\\n    font-size: 3vw;\\n    font-style: bold;\\n}\\n\\n.border:hover {\\n    background-color: rgb(84, 85, 85); \\n    color:white;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-5 border\\\">\\n      <div [routerLink]=\\\"['/countries/region/africa']\\\" style=\\\"text-align: center;cursor:pointer\\\">\\n        <img src=\\\"assets/africa.png\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n        <span class=\\\"regionName\\\">Africa</span>\\n      </div>\\n    </div>\\n    <div class=\\\"col-5 border\\\">\\n      <div [routerLink]=\\\"['/countries/region/europe']\\\" style=\\\"text-align: center;cursor:pointer\\\">\\n        <img src=\\\"assets/europe.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n        <span class=\\\"regionName\\\">Europe</span>\\n      </div>\\n    </div>\\n    <div class=\\\"col-5 border\\\">\\n        <div [routerLink]=\\\"['/countries/region/americas']\\\" style=\\\"text-align: center;cursor:pointer\\\">\\n          <img src=\\\"assets/Americas.png\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n          <span class=\\\"regionName\\\">Americas</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-5 border\\\">\\n          <div [routerLink]=\\\"['/countries/region/oceania']\\\" style=\\\"text-align: center;cursor:pointer\\\">\\n            <img src=\\\"assets/Oceania.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n            <span class=\\\"regionName\\\">Oceania</span>\\n          </div>\\n        </div>\\n        <div class=\\\"col-5 border\\\">\\n            <div [routerLink]=\\\"['/countries/region/asia']\\\" style=\\\"text-align: center;cursor:pointer\\\">\\n              <img src=\\\"assets/Asia.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n              <span class=\\\"regionName\\\">Asia</span>\\n            </div>\\n          </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-regions',\n  templateUrl: './regions.component.html',\n  styleUrls: ['./regions.component.css']\n})\nexport class RegionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedComponent } from './shared/shared.component';\nimport {RouterModule} from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  declarations: [SharedComponent],\n  exports:[SharedComponent]\n\n})\nexport class SharedModule { }\n","module.exports = \".cardContainer{\\n    margin: 10% 0 10% 0;\\n}\\n\\n.mainContainer{\\n    justify-content: center;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"countriesData\\\">\\n    <div class=\\\"row mainContainer\\\">\\n      <div *ngFor=\\\"let country of countriesData\\\">\\n        <div class=\\\"col-6 col-md-4\\\">\\n          <div class=\\\"card cardContainer\\\" style=\\\"width: 18rem;\\\">\\n            <img class=\\\"card-img-top\\\" src={{country.flag}} alt=\\\"Card image cap\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n              <p class=\\\"card-text\\\">\\n                Capital:{{country.capital}}\\n                <br/>\\n                <!-- [routerLink]=\\\"['/countries/lang',country.languages[0].iso639_1]\\\" -->\\n                Language:\\n                <span *ngFor=\\\"let language of country.languages;let last=last\\\">\\n                  <span class=\\\"goTo\\\" (click)=\\\"goLanguage(language.iso639_1)\\\">\\n                    {{language.name}}{{last?'.':','}}\\n                  </span>\\n                </span>\\n                <br/>\\n                <!-- [routerLink]=\\\"['/countries/currency',country.currencies[0].code]\\\" -->\\n                Currency:\\n                <span *ngFor=\\\"let currency of country.currencies;let last=last\\\">\\n                  <span class=\\\"goTo\\\" (click)=\\\"goCurrency(country.currencies[0].code)\\\">\\n                    {{currency.name}}{{last?'.':','}}\\n                  </span>\\n                </span>\\n              </p>\\n              <a [routerLink]=\\\"['/country',country.name]\\\" class=\\\"btn btn-primary\\\">view More</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input ,Output,EventEmitter,OnChanges, SimpleChanges} from '@angular/core';\nimport {Router,ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common'\n\n@Component({\n  selector: 'app-shared',\n  templateUrl: './shared.component.html',\n  styleUrls: ['./shared.component.css']\n})\nexport class SharedComponent implements OnInit,OnChanges {\n\n  @Input() countriesData:any;\n\n  constructor(private router:Router,private location:Location) { }\n\n  @Output() notifyLang:EventEmitter<string> = new EventEmitter<string>();\n\n  @Output() notifyCurrency:EventEmitter<string> = new EventEmitter<string>();\n\n\n  ngOnInit() {\n    \n  }\n\n  ngOnChanges(changes:SimpleChanges){\n    let data = changes.countriesData;\n    this.countriesData = data.currentValue;\n  }\n\n  goLanguage(lang): any {\n    this.notifyLang.emit(lang);\n  }\n\n  goCurrency(currency): any {\n    this.notifyCurrency.emit(currency);\n  }\n\n\n}\n","module.exports = \".coverImage{\\n    border: 1px solid black; \\n    -ms-grid-row-align: center; \\n        align-self: center;\\n}\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"countryData\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 \\\" style=\\\"text-align: center\\\">\\n      <img src={{countryData[0].flag}} class=\\\"img-fluid coverImage\\\" alt=\\\"Responsive image\\\">\\n    </div>\\n    <div class=\\\"col-12\\\">\\n      <ul class=\\\"list-group\\\" style=\\\"text-align: center\\\">\\n        <li class=\\\"list-group-item list-group-item-info\\\">Country: {{countryData[0].name}}.</li>\\n        <li class=\\\"list-group-item list-group-item-info\\\">Capital: {{countryData[0].capital}}.</li>\\n        <li class=\\\"list-group-item list-group-item-info\\\">Region: {{countryData[0].region}}. </li>\\n        <li class=\\\"list-group-item list-group-item-info\\\">Subregion: {{countryData[0].subregion}}. </li>\\n        <li class=\\\"list-group-item list-group-item-info\\\">Population: {{countryData[0].population}}. </li>\\n        <li class=\\\"list-group-item list-group-item-info\\\">\\n          Currency: \\n          <span *ngFor=\\\"let currency of countryData[0].currencies;let last=last\\\">\\n            <span [routerLink]=\\\"['/countries/currency',currency.code]\\\" class=\\\"goTo\\\">  \\n              {{currency.name}}{{last?'.':','}}\\n            </span>\\n          </span>\\n        </li>\\n        <li class=\\\"list-group-item list-group-item-info\\\">\\n          Languages: \\n          <span *ngFor=\\\"let language of countryData[0].languages; let last=last\\\">\\n            <span [routerLink]=\\\"['/countries/lang',language.iso639_1]\\\" class=\\\"goTo\\\">\\n              {{language.name}}{{last?'.':','}}\\n            </span>\\n          </span>\\n        </li>\\n      </ul>\\n      <button type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\" style=\\\"margin: 5% 0 5% 0\\\">Go Back</button>\\n      <button type=\\\"button\\\" (click)=\\\"goRegion()\\\" class=\\\"btn btn-secondary\\\" style=\\\"margin: 5% 0 5% 2%\\\">Goto Regions</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute,Router} from '@angular/router'\nimport { HttpService } from '../http.service';\nimport {Location} from '@angular/common'\nimport { ApiData } from '../Interface';\n\n\n@Component({\n  selector: 'app-single-country',\n  templateUrl: './single-country.component.html',\n  styleUrls: ['./single-country.component.css']\n})\nexport class SingleCountryComponent implements OnInit {\n\n  private name:string;\n  countryData:any;\n  responseData:ApiData;\n  constructor(private http:HttpService,private _route:ActivatedRoute,private location:Location,private router:Router) { }\n\n  ngOnInit() {\n    this.name = this._route.snapshot.paramMap.get('countryName');\n\n    this.http.getcountry(this.name).subscribe(\n      data =>{\n        this.countryData = data;\n        this.responseData = this.countryData[0];\n      },\n      error =>{\n        console.log(error.errorMessage)\n      }\n    )\n\n  }\n\n\n  goBack():any{\n    this.location.back();\n  }\n\n  goRegion():any{\n    this.router.navigate(['/regions'])\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}